一、介绍
1、具有高度的容错能力；
2、旨在部署在低成本的硬件上；
3、提供对应用程序数据的高吞吐量访问；
4、适用于具有大数据集的应用程序；
5、放宽了POSIX要求，以实现对文件系统数据的流式访问；
6、最初是作为Apache Nutch Web搜索引擎项目的基础结构构建的。

二、假设和目标
1、硬件故障
假设：硬件故障是正常现象。
目标：检测故障并快速，自动地从故障中恢复。
2、流数据访问
假设：运行在HDFS上的应用程序应该是可以对数据进行流式访问的。
目标：设计用于批处理，而不是用户交互使用；重点在于数据访问的高吞吐量，而不是数据访问的低延迟。
3、大数据集
假设：运行在HDFS上的应用程序应该是具有大量数据集的。
目标：设计为支持存储大文件，提供较高的数据聚合带宽，可以扩展到成百上千个节点。
3、简单一致性模型
假设：HDFS应用程序需要文件一次写入多次读取的访问模型。
目标：一旦创建、写入和关闭文件后，除了追加和截断外，无需更改；只能在文件末尾追加内容，不能在文件任意位置更改。
4、“移动计算比移动数据更便宜”
假设：
